{"version":3,"sources":["angular-pure-datepicker.js"],"names":["Config","isUtc","monthDirection","daysDirection","yearsDirection","daysList","monthList","CommonUtils","exports","isValidNumber","num","isNumber","isNaN","isNotInfinity","isFinite","getArrayOfNumbers","start","end","result","i","push","intArraySort","arr","direction","desc","a","b","sort","getIntArr","length","_getIntArr","concat","DateUtils","getVal","dt","method","date","Date","call","getDay","prototype","getUTCDate","getDate","getDayOfWeek","getUTCDay","getYear","getUTCFullYear","getFullYear","getMonth","getUTCMonth","getDaysInMonth","month","year","isValidModel","model","isDateUpperStartLimit","isDateLowerEndLimit","isDateBetweenLimits","LimitsModel","_setStart","d","m","y","this","_setEnd","_setNow","getTime","now","DateModel","dow","tz","getTimezoneOffset","YearsUtils","getYearsList","startDt","endDt","limitsModel","DEFAULT_YEARS_COUNT","selectedYear","latestPossibleYear","firstPossibleYear","yearsListDirection","MonthUtils","getMonthList","START_MONTH","END_MONTH","isYearOfLowerLimit","isYearOfUpperLimit","monthListDirection","DaysUtils","getDaysList","START_DAY","lastDayInMonth","isMonthOfLowerLimit","isMonthOfUpperLimit","isLowerLimit","isUpperLimit","daysListDirection","DataClass","_getSelected","isUpperStart","isEqualStart","isLowerEnd","isEqualEnd","_private","_start","_end","_limitDates","selected","list","reloadYearsList","reloadMonthList","reloadDaysList","selectedMonth","angularView","angular","module","directive","restrict","replace","templateUrl","scope","ngModel","apdStart","apdEnd","apdDayId","apdMonthId","apdYearId","apdDayClasses","apdMonthClasses","apdYearClasses","apdLocalization","apdIsUtc","link","getLimitSafeDatetime","day","datetime","settings","startDateTime","endDateTime","updateModel","ngModelWatcher","stop","data","onModelChange","oldValue","getInitDateModel","initDatetime","isInitModelValid","limitSafeDatetime","_initData","initDateModel","handler","callback","$watch","value","onDaySelectChanged","onMonthSelectChanged","onYearSelectChanged","run","$templateCache","put"],"mappings":"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","file":"angular-pure-datepicker.min.js","sourcesContent":["'use strict';\n\nvar Config = {\n    isUtc: false,\n    monthDirection: 'asc',\n    daysDirection: 'asc',\n    yearsDirection: 'desc',\n    daysList: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    monthList: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar CommonUtils = (function () {\n    'use strict';\n\n    var exports = {\n        isValidNumber: function (num) {\n            var isNumber = !isNaN(num);\n            var isNotInfinity = isFinite(num);\n            return isNumber && isNotInfinity;\n        },\n        getArrayOfNumbers: function (start, end) {\n            var result = [];\n\n            for (var i = start; i <= end; i++) {\n                result.push(i);\n            }\n\n            return result;\n        },\n        intArraySort: function (arr, direction) {\n            function desc(a, b) {\n                return b - a;\n            }\n\n            switch (direction) {\n                default:\n                    return arr.sort(function (a, b) {\n                        return a - b;\n                    });\n                case \"desc\":\n                    return arr.sort(desc);\n            }\n        },\n        getIntArr: function (length) {\n            if (!length && length !== 0) return;\n            return length ? exports._getIntArr(length - 1).concat(length) : [];\n        }\n    };\n\n    return exports;\n})();\nvar DateUtils = (function (Config) {\n    'use strict';\n\n    function getVal(dt, method) {\n        var date = new Date(dt);\n        return method.call(date);\n    }\n\n    var exports = {\n        getDay: function (dt) {\n            var method = (Config.isUTC) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return getVal(dt, method);\n        },\n        getDayOfWeek: function (dt) {\n            var method = (Config.isUTC) ? Date.prototype.getUTCDay : Date.prototype.getDay;\n            return getVal(dt, method);\n        },\n        getYear: function (dt) {\n            var method = (Config.isUTC) ? Date.prototype.getUTCFullYear : Date.prototype.getFullYear;\n            return getVal(dt, method);\n        },\n        getMonth: function (dt) {\n            var method = (Config.isUTC) ? Date.prototype.getUTCMonth : Date.prototype.getMonth;\n            return getVal(dt, method);\n        },\n        getDaysInMonth: function (month, year) {\n            var method = (Config.isUTC) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return method.call(new Date(year, month + 1, 0));\n        },\n        isValidModel: function (model) {\n            return !!model && (!!model.dt || model.dt === 0);\n        },\n        isDateUpperStartLimit: function (dt, start) {\n            if (!start) return true;\n            return (dt > start);\n        },\n        isDateLowerEndLimit: function (dt, end) {\n            if (!end) return true;\n            return (dt < end);\n        },\n        isDateBetweenLimits: function (dt, start, end) {\n            return (exports.isDateUpperStartLimit(dt, start) && exports.isDateLowerEndLimit(dt, end));\n        }\n    };\n\n    return exports;\n})(Config);\nvar LimitsModel = (function (DateUtils) {\n    'use strict';\n\n    function LimitsModel(start, end) {\n\n        var exports = {\n            start: {},\n            end: {},\n            now: {}\n        };\n\n        function _setStart(dt) {\n            exports.start.d = DateUtils.getDay(dt);\n            exports.start.m = DateUtils.getMonth(dt);\n            exports.start.y = DateUtils.getYear(dt);\n            exports.start.dt = dt;\n            return this;//TODO (S.Panfilov) Possible strict violation\n        }\n\n        function _setEnd(dt) {\n            exports.end.d = DateUtils.getDay(dt);\n            exports.end.m = DateUtils.getMonth(dt);\n            exports.end.y = DateUtils.getYear(dt);\n            exports.end.dt = dt;\n            return this;//TODO (S.Panfilov) Possible strict violation\n        }\n\n        function _setNow() {\n            var dt = new Date().getTime();\n            exports.now.d = DateUtils.getDay(dt);\n            exports.now.m = DateUtils.getMonth(dt);\n            exports.now.y = DateUtils.getYear(dt);\n            exports.now.dt = dt;\n            return this;//TODO (S.Panfilov) Possible strict violation\n        }\n\n        _setStart(start);\n        _setEnd(end);\n        _setNow();\n        \n        return exports;\n    }\n    \n    return LimitsModel;\n})(DateUtils);\nvar DateModel = (function (DateUtils) {\n    'use strict';\n\n    function DateModel(dt) {\n        this.d = DateUtils.getDay(dt);\n        this.dow = DateUtils.getDayOfWeek(dt);\n        this.m = DateUtils.getMonth(dt);\n        this.y = DateUtils.getYear(dt);\n        this.dt = dt;\n        this.tz = new Date(dt).getTimezoneOffset();\n\n        return this;\n    }\n\n    return DateModel;\n})(DateUtils);\nvar YearsUtils = (function (DateUtils, CommonUtils, Config) {\n    'use strict';\n\n    var exports = {\n        getYearsList: function (startDt, endDt, model, limitsModel) {\n            var result = [];\n            var DEFAULT_YEARS_COUNT = 10;\n\n            var start = limitsModel.start.y;\n            var end = limitsModel.end.y;\n            var now = limitsModel.now.y;\n            var selectedYear = DateUtils.getYear(model.dt);\n            var latestPossibleYear = (selectedYear > now) ? selectedYear : now;\n            var firstPossibleYear = (selectedYear < now) ? selectedYear : now;\n            latestPossibleYear = latestPossibleYear + (DEFAULT_YEARS_COUNT - 1);\n            firstPossibleYear = firstPossibleYear - (DEFAULT_YEARS_COUNT - 1);\n\n            //start = 2011, end = 2014\n            if ((startDt && endDt) && (startDt < endDt)) {\n                result = CommonUtils.getArrayOfNumbers(start, end);\n            }\n\n            //start = 2014, end = 2011\n            else if ((startDt && endDt) && (startDt > endDt)) {\n                result = CommonUtils.getArrayOfNumbers(end, start);\n            }\n\n            //start = 2011, end = 2011\n            else if ((startDt && endDt) && (startDt === endDt)) {\n                result = CommonUtils.getArrayOfNumbers(start, end);\n            }\n\n            //start = 2014, end = null\n            else if (startDt && !endDt) {\n                result = CommonUtils.getArrayOfNumbers(start, latestPossibleYear);\n            }\n\n            //start = null, end = 2014\n            else if (!startDt && endDt) {\n                //now = 2013 (or 2014),  end = 2014\n                if (limitsModel.end.y >= limitsModel.now.y) {\n\n                    if ((firstPossibleYear - DEFAULT_YEARS_COUNT) > (end - DEFAULT_YEARS_COUNT)) {\n                        result = CommonUtils.getArrayOfNumbers(firstPossibleYear, end);\n                    } else {\n                        result = CommonUtils.getArrayOfNumbers(end - (DEFAULT_YEARS_COUNT - 1), end);\n                    }\n\n                }\n                //now = 2015,  end = 2014\n                else if (limitsModel.end.y > limitsModel.now.y) {\n                    result = CommonUtils.getArrayOfNumbers(end - (DEFAULT_YEARS_COUNT - 1), end);\n                }\n\n            }\n\n            //start = null, end = null\n            else if (!startDt && !endDt) {\n                result = CommonUtils.getArrayOfNumbers(firstPossibleYear, latestPossibleYear);\n            }\n\n            return CommonUtils.intArraySort(result, Config.yearsListDirection);\n        }\n    };\n\n    return exports;\n})(DateUtils, CommonUtils, Config);\nvar MonthUtils = (function (LimitsModel, DateUtils, CommonUtils, Config) {\n    'use strict';\n\n    var exports = {\n        getMonthList: function (startDt, endDt, selectedYear) {\n            var result;\n            var START_MONTH = 0;\n            var END_MONTH = 11;\n\n            //TODO (S.Panfilov)  check\n            if (startDt || endDt) {\n                var isYearOfLowerLimit = (startDt) ? LimitsModel.start.y === selectedYear : false;\n                var isYearOfUpperLimit = (endDt) ? LimitsModel.end.y === selectedYear : false;\n                var start = (startDt) ? LimitsModel.start.m : START_MONTH;\n                var end = (endDt) ? LimitsModel.end.m : END_MONTH;\n\n                // startYear == 2015, nowYear == 2015, endYear == 2015\n                if (isYearOfLowerLimit && isYearOfUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, end);\n                }\n                // startYear == 2015, nowYear == 2015, endYear == 2016 (or null)\n                else if (isYearOfLowerLimit && !isYearOfUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, END_MONTH);\n                }\n                // startYear == 2014 (or null), nowYear == 2015, endYear == 2015\n                else if (!isYearOfLowerLimit && isYearOfUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(START_MONTH, end);\n                }\n                else {\n                    // in all other cases return array of 12 month\n                    result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n                }\n            } else {\n                // in all other cases return array of 12 month\n                result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n            }\n\n            return CommonUtils.intArraySort(result, Config.monthListDirection);\n        }\n    };\n\n    return exports;\n})(LimitsModel, DateUtils, CommonUtils, Config);\nvar DaysUtils = (function (LimitsModel, DateUtils, CommonUtils, Config) {\n    'use strict';\n\n    var exports = {\n        getDaysList: function (startDt, endDt, year, month) {\n            var result;\n            var START_DAY = 1;\n            var lastDayInMonth = DateUtils.getDaysInMonth(month, year);\n\n            //TODO (S.Panfilov)  check\n            if (startDt || endDt) {\n                var isYearOfLowerLimit = (startDt) ? LimitsModel.start.y === year : false;\n                var isYearOfUpperLimit = (endDt) ? LimitsModel.end.y === year : false;\n                var isMonthOfLowerLimit = (startDt) ? LimitsModel.start.m === month : false;\n                var isMonthOfUpperLimit = (endDt) ? LimitsModel.end.m === month : false;\n\n                var isLowerLimit = (isYearOfLowerLimit && isMonthOfLowerLimit);\n                var isUpperLimit = (isYearOfUpperLimit && isMonthOfUpperLimit);\n\n                var start = (startDt) ? LimitsModel.start.d : START_DAY;\n                var end = (endDt) ? LimitsModel.end.d : lastDayInMonth;\n\n                if (isLowerLimit && isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, end);\n                } else if (isLowerLimit && !isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, lastDayInMonth);\n                } else if (!isLowerLimit && isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(START_DAY, end);\n                } else {\n                    // in all other cases return array of 12 month\n                    result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n                }\n            } else {\n                // in all other cases return array of 12 month\n                result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n            }\n\n            return CommonUtils.intArraySort(result, Config.daysListDirection);\n        }\n    };\n\n    return exports;\n})(LimitsModel, DateUtils, CommonUtils, Config);\nvar DataClass = (function (DateUtils, CommonUtils, YearsUtils, MonthUtils, DaysUtils, DateModel) {\n    'use strict';\n\n    function _getSelected(model, start, end) {\n        var result;\n\n        var isUpperStart = (model.dt > start);\n        var isEqualStart = (model.dt === start);\n        var isLowerEnd = (model.dt > end);\n        var isEqualEnd = (model.dt === end);\n\n        //start == 1; model == 1 or 2 or 3; end == 3;\n        if ((isUpperStart || isEqualStart) || (isLowerEnd || isEqualEnd)) {\n            result = new DateModel(model.dt);\n        } else\n        //start == 1; model == 0\n        if (!isUpperStart) {\n            result = new DateModel(start);\n        } else\n        //model == 4; end == 3;\n        if (!isUpperStart) {\n            result = new DateModel(end);\n        }\n        //paranoid case\n        else {\n            result = new DateModel(new Date().getTime());\n        }\n\n        return result;\n    }\n\n    return function (model, start, end) {\n\n        var _private = {\n            _start: null,\n            _end: null,\n            _limitDates: null\n        };\n\n        var exports = {\n            selected: {},\n            list: {\n                y: null,\n                m: null,\n                d: null\n            },\n            reloadYearsList: function () {\n                exports.list.y = YearsUtils.getYearsList(_private._start, _private._end);\n                return this;\n            },\n            reloadMonthList: function () {\n                var selectedYear = DateUtils.getYear(exports.selected.dt);\n                exports.list.m = MonthUtils.getMonthList(_private._start, _private._end, selectedYear);\n                return this;\n            },\n            reloadDaysList: function () {\n                var selectedYear = DateUtils.getYear(exports.selected.dt);\n                var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n                exports.list.d = DaysUtils.getDaysList(_private._start, _private._end, selectedYear, selectedMonth);\n                return this;\n            }\n        };\n\n        model.dt = CommonUtils.isValidNumber(model.dt) ? model.dt : null;\n        start = CommonUtils.isValidNumber(start) ? start : null;\n        end = CommonUtils.isValidNumber(end) ? end : null;\n\n        exports.selected = _getSelected(model, start, end);\n        var selectedYear = DateUtils.getYear(exports.selected.dt);\n        var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n\n        _private._limitDates = new LimitsModel(start, end);\n        _private._start = start;\n        _private._end = end;\n\n        exports.list.y = YearsUtils.getYearsList(start, end, exports.selected, _private._limitDates);\n        exports.list.m = MonthUtils.getMonthList(start, end, selectedYear, _private._limitDates);\n        exports.list.d = DaysUtils.getDaysList(start, end, selectedYear, selectedMonth, exports.selected, _private._limitDates);\n\n        return exports;\n    };\n\n})(DateUtils, CommonUtils, YearsUtils, MonthUtils, DaysUtils, DateModel);\nvar angularView = (function (DateUtils, DataClass, Config) {\n    'use strict';\n\n\n    angular.module('angular-pd', [\n        'angular-pd.templates'\n    ])\n\n        .directive('pureDatepicker', function () {\n            return {\n                restrict: 'E',\n                replace: true,\n                templateUrl: 'apd.html',\n                scope: {\n                    ngModel: '=',\n                    apdStart: '=?',\n                    apdEnd: '=?',\n                    apdDayId: '@?',\n                    apdMonthId: '@?',\n                    apdYearId: '@?',\n                    apdDayClasses: '@?',\n                    apdMonthClasses: '@?',\n                    apdYearClasses: '@?',\n                    apdLocalization: '=?',\n                    apdIsUtc: '=?'\n                },\n                link: function (scope) {\n\n                    scope.apdIsUtc = scope.apdIsUtc || false;\n\n                    //TODO (S.Panfilov) check for cross-browser support\n                    //TODO (S.Panfilov) may be should add tests\n                    var settings = {\n                        initDateModel: null,\n                        startDateTime: null,\n                        endDateTime: null\n                    };\n\n                    var ngModelWatcher = {\n                        handler: null,\n                        start: function (callback) {\n                            ngModelWatcher.handler = scope.$watch('ngModel.dt', function (value, oldValue) {\n                                if (callback) {\n                                    callback(value, oldValue)\n                                }\n\n                            }, true);\n                        },\n                        stop: function () {\n                            ngModelWatcher.handler();\n                            return true;\n                        }\n                    };\n\n\n                    function getLimitSafeDatetime(day, month, year) {\n\n                        var datetime = new Date(year, month, day).getTime();\n\n                        if (!DateUtils.isDateBetweenLimits(datetime, settings.startDateTime, settings.endDateTime)) {\n                            if (!DateUtils.isDateUpperStartLimit(datetime, settings.startDateTime)) {\n                                datetime = settings.startDateTime;\n                            } else if (!DateUtils.isDateLowerEndLimit(datetime, settings.endDateTime)) {\n                                datetime = settings.endDateTime;\n                            }\n                        }\n\n                        return datetime;\n                    }\n\n                    function updateModel(datetime) {\n                        ngModelWatcher.stop();\n                        scope.data.selected = new DateModel(datetime);\n                        scope.ngModel = scope.data.selected;\n                        ngModelWatcher.start(onModelChange);\n                    }\n\n                    function onModelChange(datetime, oldValue) {\n                        if (datetime === oldValue) {\n                            return;\n                        }\n\n                        var day = DateUtils.getDay(datetime);\n                        var month = DateUtils.getMonth(datetime);\n                        var year = DateUtils.getYear(datetime);\n\n                        datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadYearsList();\n                        scope.data.reloadMonthList();\n                        scope.data.reloadDaysList();\n                    }\n\n                    function getInitDateModel(model) {\n                        var isInitModelValid = DateUtils.isValidModel(model);\n                        var initDatetime;\n\n                        if (isInitModelValid) {\n                            initDatetime = model.dt\n                        } else {\n                            initDatetime = new Date().getTime();\n                        }\n\n                        var day = DateUtils.getDay(initDatetime);\n                        var month = DateUtils.getMonth(initDatetime);\n                        var year = DateUtils.getYear(initDatetime);\n\n                        var limitSafeDatetime = getLimitSafeDatetime(day, month, year);\n\n                        return new DateModel(limitSafeDatetime);\n                    }\n\n                    function _initData(initDateModel, startDateTime, endDateTime) {\n                        scope.data = new DataClass(initDateModel, startDateTime, endDateTime);\n                        scope.ngModel = scope.data.selected;\n                    }\n\n\n                    scope.onDaySelectChanged = function (day) {\n                        if (!day) return;\n\n                        var datetime = getLimitSafeDatetime(scope.data.selected.d, scope.data.selected.m, scope.data.selected.y);\n                        updateModel(datetime);\n                    };\n\n                    scope.onMonthSelectChanged = function (month) {\n                        if (!month && month !== 0) return;\n\n                        var datetime;\n                        var year = scope.data.selected.y;\n                        var day = scope.data.selected.d;\n\n                        datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadDaysList();\n                    };\n\n                    scope.onYearSelectChanged = function (year) {\n                        if (!year && year !== 0) return;\n\n                        var month = scope.data.selected.m;\n                        var day = scope.data.selected.d;\n\n                        var datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadMonthList();\n                        scope.data.reloadDaysList();\n                    };\n\n                    (function _init() {\n                        settings.startDateTime = (scope.apdStart) ? +scope.apdStart : null;\n                        settings.endDateTime = (scope.apdEnd) ? +scope.apdEnd : null;\n                        settings.initDateModel = getInitDateModel(scope.ngModel);\n                        _initData(settings.initDateModel, settings.startDateTime, settings.endDateTime);\n\n                        //TODO (S.Panfilov) localization fix\n                        var localization = scope.apdLocalization || null;\n                        scope.daysList = Config.daysList;\n                        scope.monthList = Config.monthList;\n\n                        ngModelWatcher.start(onModelChange);\n                    })();\n\n                }\n            }\n        });\n})(DateUtils, DataClass, Config);\nangular.module(\"angular-pd.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"apd.html\",\"<div class=apd_root><select ng-model=data.selected.d ng-options=\\\"day for day in data.list.d\\\" ng-init=\\\"data.selected.d = data.list.d[0]\\\" ng-change=onDaySelectChanged(data.selected.d) id={{::apdDayId}} class=\\\"apd_elem apd_select_day apd_select {{::apdDayClasses}}\\\"></select><span ng-bind=daysList[data.selected.dow] class=\\\"apd_elem apd_day_of_week\\\"></span><select ng-model=data.selected.m ng-options=\\\"monthList[month] for month in data.list.m\\\" ng-init=\\\"data.selected.m = data.list.m[0]\\\" ng-change=onMonthSelectChanged(data.selected.m) id={{::apdMonthId}} class=\\\"apd_elem apd_select_month apd_select {{::apdMonthClasses}}\\\"></select><select ng-model=data.selected.y ng-options=\\\"year for year in data.list.y\\\" ng-init=\\\"data.selected.y = data.list.y[0]\\\" ng-change=onYearSelectChanged(data.selected.y) id={{::apdYearId}} class=\\\"apd_elem apd_select_year apd_select {{::apdYearClasses}}\\\"></select></div>\");}]);"],"sourceRoot":"/source/"}