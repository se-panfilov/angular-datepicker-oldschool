{"version":3,"sources":["angular-pure-datepicker.js"],"names":["angularView","DateUtils","DataClass","Config","DateModel","angular","module","directive","restrict","replace","templateUrl","scope","ngModel","apdStart","apdEnd","apdDayId","apdMonthId","apdYearId","apdDayClasses","apdMonthClasses","apdYearClasses","apdLocalization","apdIsUtc","link","getLimitSafeDatetime","day","month","year","datetime","Date","getTime","isDateBetweenLimits","settings","startDateTime","endDateTime","isDateUpperStartLimit","isDateLowerEndLimit","updateModel","ngModelWatcher","stop","data","selected","start","onModelChange","oldValue","getDay","getMonth","getYear","reloadYearsList","reloadMonthList","reloadDaysList","getInitDateModel","model","initDatetime","isInitModelValid","isValidModel","dt","limitSafeDatetime","_initData","initDateModel","handler","callback","$watch","value","onDaySelectChanged","d","m","y","onMonthSelectChanged","onYearSelectChanged","daysList","monthList","xDateCore","run","$templateCache","put"],"mappings":"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","file":"angular-pure-datepicker.min.js","sourcesContent":["var angularView = (function (DateUtils, DataClass, Config, DateModel) {\n    'use strict';\n\n\n    angular.module('angular-pd', [\n        'angular-pd.templates'\n    ])\n\n        .directive('pureDatepicker', function () {\n            return {\n                restrict: 'E',\n                replace: true,\n                templateUrl: 'apd.html',\n                scope: {\n                    ngModel: '=',\n                    apdStart: '=?',\n                    apdEnd: '=?',\n                    apdDayId: '@?',\n                    apdMonthId: '@?',\n                    apdYearId: '@?',\n                    apdDayClasses: '@?',\n                    apdMonthClasses: '@?',\n                    apdYearClasses: '@?',\n                    apdLocalization: '=?',\n                    apdIsUtc: '=?'\n                },\n                link: function (scope) {\n\n                    scope.apdIsUtc = scope.apdIsUtc || false;\n\n                    //TODO (S.Panfilov) check for cross-browser support\n                    //TODO (S.Panfilov) may be should add tests\n                    var settings = {\n                        initDateModel: null,\n                        startDateTime: null,\n                        endDateTime: null\n                    };\n\n                    var ngModelWatcher = {\n                        handler: null,\n                        start: function (callback) {\n                            ngModelWatcher.handler = scope.$watch('ngModel.dt', function (value, oldValue) {\n                                if (callback) {\n                                    callback(value, oldValue)\n                                }\n\n                            }, true);\n                        },\n                        stop: function () {\n                            ngModelWatcher.handler();\n                            return true;\n                        }\n                    };\n\n\n                    function getLimitSafeDatetime(day, month, year) {\n\n                        var datetime = new Date(year, month, day).getTime();\n\n                        if (!DateUtils.isDateBetweenLimits(datetime, settings.startDateTime, settings.endDateTime)) {\n                            if (!DateUtils.isDateUpperStartLimit(datetime, settings.startDateTime)) {\n                                datetime = settings.startDateTime;\n                            } else if (!DateUtils.isDateLowerEndLimit(datetime, settings.endDateTime)) {\n                                datetime = settings.endDateTime;\n                            }\n                        }\n\n                        return datetime;\n                    }\n\n                    function updateModel(datetime) {\n                        ngModelWatcher.stop();\n                        scope.data.selected = new DateModel(datetime);\n                        scope.ngModel = scope.data.selected;\n                        ngModelWatcher.start(onModelChange);\n                    }\n\n                    function onModelChange(datetime, oldValue) {\n                        if (datetime === oldValue) {\n                            return;\n                        }\n\n                        var day = DateUtils.getDay(datetime);\n                        var month = DateUtils.getMonth(datetime);\n                        var year = DateUtils.getYear(datetime);\n\n                        datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadYearsList();\n                        scope.data.reloadMonthList();\n                        scope.data.reloadDaysList();\n                    }\n\n                    function getInitDateModel(model) {\n                        var isInitModelValid = DateUtils.isValidModel(model);\n                        var initDatetime;\n\n                        if (isInitModelValid) {\n                            initDatetime = model.dt\n                        } else {\n                            initDatetime = new Date().getTime();\n                        }\n\n                        var day = DateUtils.getDay(initDatetime);\n                        var month = DateUtils.getMonth(initDatetime);\n                        var year = DateUtils.getYear(initDatetime);\n\n                        var limitSafeDatetime = getLimitSafeDatetime(day, month, year);\n\n                        return new DateModel(limitSafeDatetime);\n                    }\n\n                    function _initData(initDateModel, startDateTime, endDateTime) {\n                        scope.data = new DataClass(initDateModel, startDateTime, endDateTime);\n                        scope.ngModel = scope.data.selected;\n                    }\n\n\n                    scope.onDaySelectChanged = function (day) {\n                        if (!day) return;\n\n                        var datetime = getLimitSafeDatetime(scope.data.selected.d, scope.data.selected.m, scope.data.selected.y);\n                        updateModel(datetime);\n                    };\n\n                    scope.onMonthSelectChanged = function (month) {\n                        if (!month && month !== 0) return;\n\n                        var datetime;\n                        var year = scope.data.selected.y;\n                        var day = scope.data.selected.d;\n\n                        datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadDaysList();\n                    };\n\n                    scope.onYearSelectChanged = function (year) {\n                        if (!year && year !== 0) return;\n\n                        var month = scope.data.selected.m;\n                        var day = scope.data.selected.d;\n\n                        var datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadMonthList();\n                        scope.data.reloadDaysList();\n                    };\n\n                    (function _init() {\n                        settings.startDateTime = (scope.apdStart) ? +scope.apdStart : null;\n                        settings.endDateTime = (scope.apdEnd) ? +scope.apdEnd : null;\n                        settings.initDateModel = getInitDateModel(scope.ngModel);\n                        _initData(settings.initDateModel, settings.startDateTime, settings.endDateTime);\n\n                        //TODO (S.Panfilov) localization fix\n                        var localization = scope.apdLocalization || null;\n                        scope.daysList = Config.daysList;\n                        scope.monthList = Config.monthList;\n\n                        ngModelWatcher.start(onModelChange);\n                    })();\n\n                }\n            }\n        });\n})(xDateCore.DateUtils, xDateCore.DataClass, xDateCore.Config, xDateCore.DateModel);\nangular.module(\"angular-pd.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"apd.html\",\"<div class=apd_root><select ng-model=data.selected.d ng-options=\\\"day for day in data.list.d\\\" ng-init=\\\"data.selected.d = data.list.d[0]\\\" ng-change=onDaySelectChanged(data.selected.d) id={{::apdDayId}} class=\\\"apd_elem apd_select_day apd_select {{::apdDayClasses}}\\\"></select><span ng-bind=daysList[data.selected.dow] class=\\\"apd_elem apd_day_of_week\\\"></span><select ng-model=data.selected.m ng-options=\\\"monthList[month] for month in data.list.m\\\" ng-init=\\\"data.selected.m = data.list.m[0]\\\" ng-change=onMonthSelectChanged(data.selected.m) id={{::apdMonthId}} class=\\\"apd_elem apd_select_month apd_select {{::apdMonthClasses}}\\\"></select><select ng-model=data.selected.y ng-options=\\\"year for year in data.list.y\\\" ng-init=\\\"data.selected.y = data.list.y[0]\\\" ng-change=onYearSelectChanged(data.selected.y) id={{::apdYearId}} class=\\\"apd_elem apd_select_year apd_select {{::apdYearClasses}}\\\"></select></div>\");}]);"],"sourceRoot":"/source/"}