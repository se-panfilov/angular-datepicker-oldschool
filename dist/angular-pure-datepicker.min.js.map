{"version":3,"sources":["angular-pure-datepicker.js"],"names":["xDateCore","exports","Config","isUtc","monthDirection","daysDirection","yearsDirection","defaultYearsCount","daysList","monthList","CommonUtils","isValidNumber","num","isNumber","isNaN","isNotInfinity","isFinite","getArrayOfNumbers","start","end","result","i","push","intArraySort","arr","direction","desc","a","b","DESC","sort","getIntArr","length","concat","DateUtils","getVal","dt","method","date","Date","call","getDay","prototype","getUTCDate","getDate","getDayOfWeek","getUTCDay","getYear","getUTCFullYear","getFullYear","getMonth","getUTCMonth","getDaysInMonth","month","year","isValidModel","model","isDateUpperStartLimit","isDateLowerEndLimit","isDateBetweenLimits","LimitsModel","_setStart","d","m","y","this","_setEnd","_setNow","getTime","now","DateModel","dow","tz","getTimezoneOffset","YearsUtils","getYearsList","startDt","endDt","limitsModel","DEFAULT_YEARS_COUNT","selectedYear","latestPossibleYear","firstPossibleYear","MonthUtils","getMonthList","START_MONTH","END_MONTH","isYearOfLowerLimit","isYearOfUpperLimit","DaysUtils","getDaysList","START_DAY","lastDayInMonth","isMonthOfLowerLimit","isMonthOfUpperLimit","isLowerLimit","isUpperLimit","DataClass","_getSelected","isUpperStart","isEqualStart","isLowerEnd","isEqualEnd","_private","_start","_end","_limitDates","selected","list","reloadYearsList","reloadMonthList","reloadDaysList","selectedMonth","module","angularView","angular","directive","restrict","replace","templateUrl","scope","ngModel","apdStart","apdEnd","apdDayId","apdMonthId","apdYearId","apdDayClasses","apdMonthClasses","apdYearClasses","apdLocalization","apdIsUtc","link","getLimitSafeDatetime","day","datetime","settings","startDateTime","endDateTime","updateModel","ngModelWatcher","stop","data","onModelChange","oldValue","getInitDateModel","initDatetime","isInitModelValid","limitSafeDatetime","_initData","initDateModel","handler","callback","$watch","value","onDaySelectChanged","onMonthSelectChanged","onYearSelectChanged","run","$templateCache","put"],"mappings":"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","file":"angular-pure-datepicker.min.js","sourcesContent":["var xDateCore = (function () {\n\r    var exports = {};\n\r    exports.Config = (function () {\n    'use strict';\n\n    return {\n        isUtc: false,\n        monthDirection: 'asc',\n        daysDirection: 'asc',\n        yearsDirection: 'desc',\n        defaultYearsCount: 50,\n        daysList: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        monthList: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    };\n})();\n\n////TODO (S.Panfilov) test\n//if ( typeof module === 'object' && module.exports) {\n//    module.exports = Config;\n//}\nexports.CommonUtils = (function () {\n    'use strict';\n\n    var exports = {\n        isValidNumber: function (num) {\n            var isNumber = !isNaN(num);\n            var isNotInfinity = isFinite(num);\n            return isNumber && isNotInfinity;\n        },\n        getArrayOfNumbers: function (start, end) {\n            var result = [];\n\n            for (var i = start; i <= end; i++) {\n                result.push(i);\n            }\n\n            return result;\n        },\n        intArraySort: function (arr, direction) {\n            var DESC = 'desc';\n\n            function desc(a, b) {\n                return b - a;\n            }\n\n            switch (direction) {\n                default:\n                    return arr.sort(function (a, b) {\n                        return a - b;\n                    });\n                case DESC:\n                    return arr.sort(desc);\n            }\n        },\n        getIntArr: function (length) {\n            if (!length && length !== 0) return;\n            return length ? exports.getIntArr(length - 1).concat(length) : [];\n        }\n    };\n\n    return exports;\n})();\nexports.DateUtils = (function (Config) {\n    'use strict';\n\n    function getVal(dt, method) {\n        var date = new Date(dt);\n        return method.call(date);\n    }\n\n    var exports = {\n        getDay: function (dt) {\n            var method = (Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return getVal(dt, method);\n        },\n        getDayOfWeek: function (dt) {\n            var method = (Config.isUtc) ? Date.prototype.getUTCDay : Date.prototype.getDay;\n            return getVal(dt, method);\n        },\n        getYear: function (dt) {\n            var method = (Config.isUtc) ? Date.prototype.getUTCFullYear : Date.prototype.getFullYear;\n            return getVal(dt, method);\n        },\n        getMonth: function (dt) {\n            var method = (Config.isUtc) ? Date.prototype.getUTCMonth : Date.prototype.getMonth;\n            return getVal(dt, method);\n        },\n        getDaysInMonth: function (month, year) {\n            var method = (Config.isUtc) ? Date.prototype.getUTCDate : Date.prototype.getDate;\n            return method.call(new Date(year, month + 1, 0));\n        },\n        isValidModel: function (model) {\n            return !!model && (!!model.dt || model.dt === 0);\n        },\n        isDateUpperStartLimit: function (dt, start) {\n            if (!start) return true;\n            return (dt > start);\n        },\n        isDateLowerEndLimit: function (dt, end) {\n            if (!end) return true;\n            return (dt < end);\n        },\n        isDateBetweenLimits: function (dt, start, end) {\n            return (exports.isDateUpperStartLimit(dt, start) && exports.isDateLowerEndLimit(dt, end));\n        }\n    };\n\n    return exports;\n})(exports.Config);\nexports.LimitsModel = (function (DateUtils) {\n    'use strict';\n\n    function LimitsModel(start, end) {\n\n        var exports = {\n            start: {},\n            end: {},\n            now: {}\n        };\n\n        function _setStart(dt) {\n            exports.start.d = DateUtils.getDay(dt);\n            exports.start.m = DateUtils.getMonth(dt);\n            exports.start.y = DateUtils.getYear(dt);\n            exports.start.dt = dt;\n            return this;//TODO (S.Panfilov) Possible strict violation\n        }\n\n        function _setEnd(dt) {\n            exports.end.d = DateUtils.getDay(dt);\n            exports.end.m = DateUtils.getMonth(dt);\n            exports.end.y = DateUtils.getYear(dt);\n            exports.end.dt = dt;\n            return this;//TODO (S.Panfilov) Possible strict violation\n        }\n\n        function _setNow() {\n            var dt = new Date().getTime();\n            exports.now.d = DateUtils.getDay(dt);\n            exports.now.m = DateUtils.getMonth(dt);\n            exports.now.y = DateUtils.getYear(dt);\n            exports.now.dt = dt;\n            return this;//TODO (S.Panfilov) Possible strict violation\n        }\n\n        _setStart(start);\n        _setEnd(end);\n        _setNow();\n        \n        return exports;\n    }\n    \n    return LimitsModel;\n})(exports.DateUtils);\nexports.DateModel = (function (DateUtils) {\n    'use strict';\n\n    function DateModel(dt) {\n        this.d = DateUtils.getDay(dt);\n        this.dow = DateUtils.getDayOfWeek(dt);\n        this.m = DateUtils.getMonth(dt);\n        this.y = DateUtils.getYear(dt);\n        this.dt = dt;\n        this.tz = new Date(dt).getTimezoneOffset();\n\n        return this;\n    }\n\n    return DateModel;\n})(exports.DateUtils);\nexports.YearsUtils = (function (DateUtils, CommonUtils, Config) {\n    'use strict';\n\n    var exports = {\n        getYearsList: function (startDt, endDt, model, limitsModel) {\n            var result = [];\n            var DEFAULT_YEARS_COUNT = Config.defaultYearsCount;\n\n            var start = limitsModel.start.y;\n            var end = limitsModel.end.y;\n            var now = limitsModel.now.y;\n            var selectedYear = DateUtils.getYear(model.dt);\n            var latestPossibleYear = (selectedYear > now) ? selectedYear : now;\n            var firstPossibleYear = (selectedYear < now) ? selectedYear : now;\n            latestPossibleYear += (DEFAULT_YEARS_COUNT - 1);\n            firstPossibleYear -= (DEFAULT_YEARS_COUNT - 1);\n\n            //start = 2011, end = 2014\n            if ((startDt && endDt) && (startDt < endDt)) {\n                result = CommonUtils.getArrayOfNumbers(start, end);\n            }\n\n            //start = 2014, end = 2011\n            else if ((startDt && endDt) && (startDt > endDt)) {\n                result = CommonUtils.getArrayOfNumbers(end, start);\n            }\n\n            //start = 2011, end = 2011\n            else if ((startDt && endDt) && (startDt === endDt)) {\n                result = CommonUtils.getArrayOfNumbers(start, end);\n            }\n\n            //start = 2014, end = null\n            else if (startDt && !endDt) {\n                result = CommonUtils.getArrayOfNumbers(start, latestPossibleYear);\n            }\n\n            //start = null, end = 2014\n            else if (!startDt && endDt) {\n                //now = 2013 (or 2014),  end = 2014\n                if (limitsModel.end.y >= limitsModel.now.y) {\n\n                    if ((firstPossibleYear - DEFAULT_YEARS_COUNT) > (end - DEFAULT_YEARS_COUNT)) {\n                        result = CommonUtils.getArrayOfNumbers(firstPossibleYear, end);\n                    } else {\n                        result = CommonUtils.getArrayOfNumbers(end - (DEFAULT_YEARS_COUNT - 1), end);\n                    }\n\n                }\n                //now = 2015,  end = 2014\n                else if (limitsModel.end.y > limitsModel.now.y) {\n                    result = CommonUtils.getArrayOfNumbers(end - (DEFAULT_YEARS_COUNT - 1), end);\n                }\n\n            }\n\n            //start = null, end = null\n            else if (!startDt && !endDt) {\n                result = CommonUtils.getArrayOfNumbers(firstPossibleYear, latestPossibleYear);\n            }\n\n            return CommonUtils.intArraySort(result, Config.yearsDirection);\n        }\n    };\n\n    return exports;\n})(exports.DateUtils, exports.CommonUtils, exports.Config);\nexports.MonthUtils = (function (LimitsModel, DateUtils, CommonUtils, Config) {\n    'use strict';\n\n    var exports = {\n        getMonthList: function (startDt, endDt, selectedYear) {\n            var result;\n            var START_MONTH = 0;\n            var END_MONTH = 11;\n\n            //TODO (S.Panfilov)  check\n            if (startDt || endDt) {\n                var isYearOfLowerLimit = (startDt) ? LimitsModel.start.y === selectedYear : false;\n                var isYearOfUpperLimit = (endDt) ? LimitsModel.end.y === selectedYear : false;\n                var start = (startDt) ? LimitsModel.start.m : START_MONTH;\n                var end = (endDt) ? LimitsModel.end.m : END_MONTH;\n\n                // startYear == 2015, nowYear == 2015, endYear == 2015\n                if (isYearOfLowerLimit && isYearOfUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, end);\n                }\n                // startYear == 2015, nowYear == 2015, endYear == 2016 (or null)\n                else if (isYearOfLowerLimit && !isYearOfUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, END_MONTH);\n                }\n                // startYear == 2014 (or null), nowYear == 2015, endYear == 2015\n                else if (!isYearOfLowerLimit && isYearOfUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(START_MONTH, end);\n                }\n                else {\n                    // in all other cases return array of 12 month\n                    result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n                }\n            } else {\n                // in all other cases return array of 12 month\n                result = CommonUtils.getArrayOfNumbers(START_MONTH, END_MONTH);\n            }\n\n            return CommonUtils.intArraySort(result, Config.monthDirection);\n        }\n    };\n\n    return exports;\n})(exports.LimitsModel, exports.DateUtils, exports.CommonUtils, exports.Config);\nexports.DaysUtils = (function (LimitsModel, DateUtils, CommonUtils, Config) {\n    'use strict';\n\n    var exports = {\n        getDaysList: function (startDt, endDt, year, month) {\n            var result;\n            var START_DAY = 1;\n            var lastDayInMonth = DateUtils.getDaysInMonth(month, year);\n\n            //TODO (S.Panfilov)  check\n            if (startDt || endDt) {\n                var isYearOfLowerLimit = (startDt) ? LimitsModel.start.y === year : false;\n                var isYearOfUpperLimit = (endDt) ? LimitsModel.end.y === year : false;\n                var isMonthOfLowerLimit = (startDt) ? LimitsModel.start.m === month : false;\n                var isMonthOfUpperLimit = (endDt) ? LimitsModel.end.m === month : false;\n\n                var isLowerLimit = (isYearOfLowerLimit && isMonthOfLowerLimit);\n                var isUpperLimit = (isYearOfUpperLimit && isMonthOfUpperLimit);\n\n                var start = (startDt) ? LimitsModel.start.d : START_DAY;\n                var end = (endDt) ? LimitsModel.end.d : lastDayInMonth;\n\n                if (isLowerLimit && isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, end);\n                } else if (isLowerLimit && !isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(start, lastDayInMonth);\n                } else if (!isLowerLimit && isUpperLimit) {\n                    result = CommonUtils.getArrayOfNumbers(START_DAY, end);\n                } else {\n                    // in all other cases return array of 12 month\n                    result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n                }\n            } else {\n                // in all other cases return array of 12 month\n                result = CommonUtils.getArrayOfNumbers(START_DAY, lastDayInMonth);\n            }\n\n            return CommonUtils.intArraySort(result, Config.daysDirection);\n        }\n    };\n\n    return exports;\n})(exports.LimitsModel, exports.DateUtils, exports.CommonUtils, exports.Config);\nexports.DataClass = (function (DateUtils, CommonUtils, YearsUtils, MonthUtils, DaysUtils, DateModel) {\n    'use strict';\n\n    function _getSelected(model, start, end) {\n        var result;\n\n        var isUpperStart = (model.dt > start);\n        var isEqualStart = (model.dt === start);\n        var isLowerEnd = (model.dt > end);\n        var isEqualEnd = (model.dt === end);\n\n        //start == 1; model == 1 or 2 or 3; end == 3;\n        if ((isUpperStart || isEqualStart) || (isLowerEnd || isEqualEnd)) {\n            result = new DateModel(model.dt);\n        } else if (!isUpperStart) { //start == 1; model == 0\n            result = new DateModel(start);\n        } else if (!isUpperStart) { //model == 4; end == 3;\n            result = new DateModel(end);\n        } else {//paranoid case\n            result = new DateModel(new Date().getTime());\n        }\n\n        return result;\n    }\n\n    return function (model, start, end) {\n\n        var _private = {\n            _start: null,\n            _end: null,\n            _limitDates: null\n        };\n\n        var exports = {\n            selected: {},\n            list: {\n                y: null,\n                m: null,\n                d: null\n            },\n            reloadYearsList: function () {\n                exports.list.y = YearsUtils.getYearsList(_private._start, _private._end);\n                return this;\n            },\n            reloadMonthList: function () {\n                var selectedYear = DateUtils.getYear(exports.selected.dt);\n                exports.list.m = MonthUtils.getMonthList(_private._start, _private._end, selectedYear);\n                return this;\n            },\n            reloadDaysList: function () {\n                var selectedYear = DateUtils.getYear(exports.selected.dt);\n                var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n                exports.list.d = DaysUtils.getDaysList(_private._start, _private._end, selectedYear, selectedMonth);\n                return this;\n            }\n        };\n\n        model.dt = CommonUtils.isValidNumber(model.dt) ? model.dt : null;\n        start = CommonUtils.isValidNumber(start) ? start : null;\n        end = CommonUtils.isValidNumber(end) ? end : null;\n\n        exports.selected = _getSelected(model, start, end);\n        var selectedYear = DateUtils.getYear(exports.selected.dt);\n        var selectedMonth = DateUtils.getMonth(exports.selected.dt);\n\n        _private._limitDates = new LimitsModel(start, end);\n        _private._start = start;\n        _private._end = end;\n\n        exports.list.y = YearsUtils.getYearsList(start, end, exports.selected, _private._limitDates);\n        exports.list.m = MonthUtils.getMonthList(start, end, selectedYear, _private._limitDates);\n        exports.list.d = DaysUtils.getDaysList(start, end, selectedYear, selectedMonth, exports.selected, _private._limitDates);\n\n        return exports;\n    };\n\n})(exports.DateUtils, exports.CommonUtils, exports.YearsUtils, exports.MonthUtils, exports.DaysUtils, exports.DateModel);\n\r    if (typeof module === 'object' && module.exports) {\n\r        module.exports = exports;\n\r    }\n\r\n\r    return exports;})();\nvar angularView = (function (DateUtils, DataClass, Config) {\n    'use strict';\n\n\n    angular.module('angular-pd', [\n        'angular-pd.templates'\n    ])\n\n        .directive('pureDatepicker', function () {\n            return {\n                restrict: 'E',\n                replace: true,\n                templateUrl: 'apd.html',\n                scope: {\n                    ngModel: '=',\n                    apdStart: '=?',\n                    apdEnd: '=?',\n                    apdDayId: '@?',\n                    apdMonthId: '@?',\n                    apdYearId: '@?',\n                    apdDayClasses: '@?',\n                    apdMonthClasses: '@?',\n                    apdYearClasses: '@?',\n                    apdLocalization: '=?',\n                    apdIsUtc: '=?'\n                },\n                link: function (scope) {\n\n                    scope.apdIsUtc = scope.apdIsUtc || false;\n\n                    //TODO (S.Panfilov) check for cross-browser support\n                    //TODO (S.Panfilov) may be should add tests\n                    var settings = {\n                        initDateModel: null,\n                        startDateTime: null,\n                        endDateTime: null\n                    };\n\n                    var ngModelWatcher = {\n                        handler: null,\n                        start: function (callback) {\n                            ngModelWatcher.handler = scope.$watch('ngModel.dt', function (value, oldValue) {\n                                if (callback) {\n                                    callback(value, oldValue)\n                                }\n\n                            }, true);\n                        },\n                        stop: function () {\n                            ngModelWatcher.handler();\n                            return true;\n                        }\n                    };\n\n\n                    function getLimitSafeDatetime(day, month, year) {\n\n                        var datetime = new Date(year, month, day).getTime();\n\n                        if (!DateUtils.isDateBetweenLimits(datetime, settings.startDateTime, settings.endDateTime)) {\n                            if (!DateUtils.isDateUpperStartLimit(datetime, settings.startDateTime)) {\n                                datetime = settings.startDateTime;\n                            } else if (!DateUtils.isDateLowerEndLimit(datetime, settings.endDateTime)) {\n                                datetime = settings.endDateTime;\n                            }\n                        }\n\n                        return datetime;\n                    }\n\n                    function updateModel(datetime) {\n                        ngModelWatcher.stop();\n                        scope.data.selected = new DateModel(datetime);\n                        scope.ngModel = scope.data.selected;\n                        ngModelWatcher.start(onModelChange);\n                    }\n\n                    function onModelChange(datetime, oldValue) {\n                        if (datetime === oldValue) {\n                            return;\n                        }\n\n                        var day = DateUtils.getDay(datetime);\n                        var month = DateUtils.getMonth(datetime);\n                        var year = DateUtils.getYear(datetime);\n\n                        datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadYearsList();\n                        scope.data.reloadMonthList();\n                        scope.data.reloadDaysList();\n                    }\n\n                    function getInitDateModel(model) {\n                        var isInitModelValid = DateUtils.isValidModel(model);\n                        var initDatetime;\n\n                        if (isInitModelValid) {\n                            initDatetime = model.dt\n                        } else {\n                            initDatetime = new Date().getTime();\n                        }\n\n                        var day = DateUtils.getDay(initDatetime);\n                        var month = DateUtils.getMonth(initDatetime);\n                        var year = DateUtils.getYear(initDatetime);\n\n                        var limitSafeDatetime = getLimitSafeDatetime(day, month, year);\n\n                        return new DateModel(limitSafeDatetime);\n                    }\n\n                    function _initData(initDateModel, startDateTime, endDateTime) {\n                        scope.data = new DataClass(initDateModel, startDateTime, endDateTime);\n                        scope.ngModel = scope.data.selected;\n                    }\n\n\n                    scope.onDaySelectChanged = function (day) {\n                        if (!day) return;\n\n                        var datetime = getLimitSafeDatetime(scope.data.selected.d, scope.data.selected.m, scope.data.selected.y);\n                        updateModel(datetime);\n                    };\n\n                    scope.onMonthSelectChanged = function (month) {\n                        if (!month && month !== 0) return;\n\n                        var datetime;\n                        var year = scope.data.selected.y;\n                        var day = scope.data.selected.d;\n\n                        datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadDaysList();\n                    };\n\n                    scope.onYearSelectChanged = function (year) {\n                        if (!year && year !== 0) return;\n\n                        var month = scope.data.selected.m;\n                        var day = scope.data.selected.d;\n\n                        var datetime = getLimitSafeDatetime(day, month, year);\n                        updateModel(datetime);\n\n                        scope.data.reloadMonthList();\n                        scope.data.reloadDaysList();\n                    };\n\n                    (function _init() {\n                        settings.startDateTime = (scope.apdStart) ? +scope.apdStart : null;\n                        settings.endDateTime = (scope.apdEnd) ? +scope.apdEnd : null;\n                        settings.initDateModel = getInitDateModel(scope.ngModel);\n                        _initData(settings.initDateModel, settings.startDateTime, settings.endDateTime);\n\n                        //TODO (S.Panfilov) localization fix\n                        var localization = scope.apdLocalization || null;\n                        scope.daysList = Config.daysList;\n                        scope.monthList = Config.monthList;\n\n                        ngModelWatcher.start(onModelChange);\n                    })();\n\n                }\n            }\n        });\n})(DateUtils, DataClass, Config);\nangular.module(\"angular-pd.templates\", []).run([\"$templateCache\", function($templateCache) {$templateCache.put(\"apd.html\",\"<div class=apd_root><select ng-model=data.selected.d ng-options=\\\"day for day in data.list.d\\\" ng-init=\\\"data.selected.d = data.list.d[0]\\\" ng-change=onDaySelectChanged(data.selected.d) id={{::apdDayId}} class=\\\"apd_elem apd_select_day apd_select {{::apdDayClasses}}\\\"></select><span ng-bind=daysList[data.selected.dow] class=\\\"apd_elem apd_day_of_week\\\"></span><select ng-model=data.selected.m ng-options=\\\"monthList[month] for month in data.list.m\\\" ng-init=\\\"data.selected.m = data.list.m[0]\\\" ng-change=onMonthSelectChanged(data.selected.m) id={{::apdMonthId}} class=\\\"apd_elem apd_select_month apd_select {{::apdMonthClasses}}\\\"></select><select ng-model=data.selected.y ng-options=\\\"year for year in data.list.y\\\" ng-init=\\\"data.selected.y = data.list.y[0]\\\" ng-change=onYearSelectChanged(data.selected.y) id={{::apdYearId}} class=\\\"apd_elem apd_select_year apd_select {{::apdYearClasses}}\\\"></select></div>\");}]);"],"sourceRoot":"/source/"}